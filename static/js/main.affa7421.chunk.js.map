{"version":3,"sources":["components/Home.js","components/Login.js","components/ParkCard.js","components/ParksPage.js","components/CampgroundCard.js","components/CampgroundsPage.js","components/ToDoCard.js","components/ToDosPage.js","App.js","reportWebVitals.js","index.js"],"names":["Home","className","Login","signup","login","useState","username","setUsername","password","setPassword","newUsername","setNewUsername","newPassword","setNewPassword","onSubmit","e","preventDefault","handleSubmitLogin","placeholder","type","value","onChange","target","handleSubmitSignup","ParkCard","park","viewCampgrounds","viewToDos","parkCampgrounds","width","src","images","url","fullName","addresses","city","stateCode","to","id","parkCode","onClick","ParksPage","parks","map","CampgroundCard","campground","console","log","name","description","campsites","totalSites","CampgroundsPage","ToDoCard","toDo","title","shortDescription","ToDosPage","parkToDos","App","loggedIn","setLoggedIn","setUser","setParks","campgrounds","setCampgrounds","setParkCampgrounds","toDos","setToDos","setParkToDos","useEffect","axios","get","process","then","response","data","filter","designation","undefined","relatedParks","token","localStorage","getItem","fetch","method","headers","Authorization","ok","json","user","clear","basename","exact","path","Accept","body","JSON","stringify","jwt","setItem","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.affa7421.chunk.js","sourcesContent":["function Home() {\n    return (\n        <div className=\"App\">\n            <h1>Hello TestRoute</h1>\n        </div>\n    )\n}\n\n\nexport default Home;","import { useState } from 'react';\n\nexport default function Login({signup, login}) {\n\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [newUsername, setNewUsername] = useState('')\n    const [newPassword, setNewPassword] = useState('')\n\n    function handleSubmitSignup(e) {\n        e.preventDefault()\n        signup(newUsername, newPassword)\n    }\n\n    function handleSubmitLogin(e) {\n        e.preventDefault();\n        login(username, password)\n    }\n\n    return (\n        <div className=\"login\">\n                <div className=\"title\">\n                    <h1>National Parks Planner</h1>\n                </div>\n                <form onSubmit={(e) => handleSubmitLogin(e)}>\n                <input\n                    placeholder=\"username\"\n                    type=\"text\"\n                    value={username}\n                    onChange={(e) => setUsername(e.target.value)}\n                />\n                <input\n                    placeholder=\"password\"\n                    type=\"text\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                />\n                <button type=\"submit\">Login</button>\n                </form>\n    \n                <form onSubmit={(e) => handleSubmitSignup(e)}>\n                <input\n                    placeholder=\"username\"\n                    type=\"text\"\n                    value={newUsername}\n                    onChange={(e) => setNewUsername(e.target.value)}\n                />\n                <input\n                    placeholder=\"password\"\n                    type=\"text\"\n                    value={newPassword}\n                    onChange={(e) => setNewPassword(e.target.value)}\n                />\n                \n                <button type=\"submit\">Create Account</button>\n                </form>\n            </div>\n    )\n}\n\n\n","import { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nfunction ParkCard({park, viewCampgrounds, parkCampgrounds, viewToDos}) {\n    return (\n        <>\n        <img width=\"100\" src={park.images[0].url}/>\n        <h1>{park.fullName}</h1>\n        <h2>{park.addresses[0].city}, {park.addresses[0].stateCode}</h2>\n        <Link to=\"/campgrounds-page\">\n            <button id={park.parkCode} onClick={(e) => viewCampgrounds(e.target.id)}>View Campgrounds</button>\n        </Link>\n        <Link to=\"/todos-page\">\n            <button id={park.parkCode} onClick={(e) => viewToDos(e.target.id)}>View ToDos</button>\n        </Link>\n        </>\n    )\n}\n\nexport default ParkCard;","import ParkCard from \"./ParkCard\";\n\nfunction ParksPage({parks, viewCampgrounds, parkCampgrounds, viewToDos}) {\n    return (\n        <>\n        {parks.map((park) => <ParkCard key={park.id} park={park} viewCampgrounds={viewCampgrounds} parkCampgrounds={parkCampgrounds} viewToDos={viewToDos} />)}\n            \n        </>\n    )\n}\n\nexport default ParksPage;","function CampgroundCard({campground}) {\n    console.log(\"CAMP CARD\", campground)\n    return(\n        <>\n            \n            <img width=\"100\" src={campground.images[0].url} />\n            <h1>{campground.name}</h1>\n            <p>{campground.description}</p>\n            <p>Total Sites: {campground.campsites.totalSites}</p>\n            \n        </>\n    )\n}\n\nexport default CampgroundCard;","import CampgroundCard from \"./CampgroundCard\";\n\nfunction CampgroundsPage({parkCampgrounds}) {\n    console.log(\"CAMP PAGE\", parkCampgrounds)\n    return(\n        <>\n            {parkCampgrounds.map((campground) => <CampgroundCard key={campground.id}campground={campground}/>)}\n        </>\n    )\n}\n\nexport default CampgroundsPage;","function ToDoCard({toDo}) {\n    return(\n        <>\n            <img width=\"100\" src={toDo.images[0].url}/>\n            <h1> {toDo.title}</h1>\n            <p>{toDo.shortDescription}</p>\n        </>\n    )\n}\n\nexport default ToDoCard;","import ToDoCard from \"./ToDoCard\";\n\nfunction ToDosPage({parkToDos}) {\n    return(\n        <>\n            {console.log(\"TODOS PAGE\", parkToDos)}\n            {parkToDos.map((toDo) => <ToDoCard key={toDo.id} toDo={toDo} />)}\n        </>\n    )\n}\n\nexport default ToDosPage;","import './App.css';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Home from \"./components/Home\";\nimport Login from \"./components/Login\";\nimport ParksPage from \"./components/ParksPage\";\nimport CampgroundsPage from \"./components/CampgroundsPage\";\nimport ToDosPage from \"./components/ToDosPage\";\n\nfunction App() {\n\n  const production = 'https://backend-national-park-planner.herokuapp.com';\n  const development = 'http://localhost:3000';\n  const url = (process.env.NODE_ENV ? production : development)\n\n  const [loggedIn, setLoggedIn] = useState(false)\n  const [user, setUser] = useState([])\n  const [parks, setParks] = useState([])\n  const [campgrounds, setCampgrounds] = useState([])\n  const [parkCampgrounds, setParkCampgrounds] = useState([])\n  const [toDos, setToDos] = useState([])\n  const [parkToDos, setParkToDos] = useState([])\n\n\n  useEffect(() => {\n    const parkAPIRoot = \"https://developer.nps.gov/api/v1/parks?limit=465&\";\n    const accessKey = process.env.REACT_APP_ACCESSKEY;\n\n    axios \n    .get(`${parkAPIRoot}api_key=${accessKey}`)\n    .then(response => {\n      setParks(response.data.data.filter((park) => \n      park.designation === 'National Park'))\n    })\n  }, [])\n\n  useEffect(() => {\n    const campAPIRoot = \"https://developer.nps.gov/api/v1/campgrounds?limit=642&\";\n    const accessKey=process.env.REACT_APP_ACCESSKEY;\n\n    axios \n    .get(`${campAPIRoot}api_key=${accessKey}`)\n    .then(response => setCampgrounds(response.data.data))\n  }, [])\n\n  useEffect(() => {\n    const toDoAPIRoot = \"https://developer.nps.gov/api/v1/thingstodo?limit=2500&\";\n    const accessKey = process.env.REACT_APP_ACCESSKEY;\n\n    axios \n    .get(`${toDoAPIRoot}api_key=${accessKey}`)\n    .then(response => { \n      setToDos(response.data.data.filter((toDo) => toDo.relatedParks[0] !== undefined && toDo.relatedParks[0].designation === \"National Park\"))\n    })\n  }, [])\n\n  useEffect(() => {\n    const token = localStorage.getItem(\"jwt\");\n    console.log(\"token: \" + token)\n    \n    fetch(`${url}profile`, {\n      method: \"GET\",\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    }).then((response) => {\n      if (response.ok) {\n        response.json().then((data) => {\n          setLoggedIn(true)\n          setUser(data.user)\n        });\n      } else {\n        console.log(\"please log in\")\n      }\n    });\n  }, []);\n\n    function signup(username, password) {\n      fetch(`${url}/users`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\",\n        },\n        body: JSON.stringify({\n          user: {\n            username: `${username}`,\n            password: `${password}`,\n          },\n        }),\n      })\n        .then((response) => {\n          if (response.ok) {\n            response.json().then((data) => {\n              setUser(data.user)\n              setLoggedIn(true)\n              localStorage.setItem(\"jwt\", data.jwt);\n            });\n          } else {\n            console.log(\"form incorrectly filled out\")\n          }\n        })\n    }\n  \n    function login(username, password) {\n      fetch(`${url}/login`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\",\n        },\n        body: JSON.stringify({\n          user: {\n            username: `${username}`,\n            password: `${password}`\n          }\n        })\n      }).then((response) => {\n        if (response.ok) {\n          response.json().then((data) => {\n            console.log(\"hi\" + data.jwt)\n            setUser(data.user)\n            setLoggedIn(true)\n            localStorage.setItem(\"jwt\", data.jwt);\n          });\n        } else {\n          console.log(\"wrong username/password\")\n        }\n      })\n    }\n  \n    function logout() {\n      localStorage.clear()\n      setUser(null)\n      setLoggedIn(false)\n    }\n\n    function viewCampgrounds(parkCode) {\n      console.log(\"VIEWCAMPGROUNDS FUNCTION\")\n      setParkCampgrounds(campgrounds.filter((campground) => campground.parkCode === parkCode))\n    }\n\n    function viewToDos(parkCode) {\n      console.log(\"VIEWTODOS FUNCTION\")\n      setParkToDos(toDos.filter((toDo) => toDo.relatedParks[0].parkCode === parkCode))\n    }\n  \n  return (\n    <div className=\"app\">\n      {loggedIn ? <>\n        <button className=\"logout-button\" onClick={logout}>Logout</button>\n        <Router basename={process.env.PUBLIC_URL}>\n          <div className=\"select-page\">\n              <nav>\n              <Link to=\"/\">Home</Link>\n              <Link to=\"/parks-page\">Parks</Link>\n              {/* <Link to=\"/campgrounds-page\">Campgrounds</Link> */}\n              </nav>\n          </div>\n          <Switch>\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n            <Route path=\"/parks-page\">\n              <ParksPage parks={parks} viewCampgrounds={viewCampgrounds} parkCampgrounds={parkCampgrounds} viewToDos={viewToDos}/>\n            </Route>\n            <Route path=\"/campgrounds-page\">\n              <CampgroundsPage parkCampgrounds={parkCampgrounds} />\n            </Route>\n            <Route path=\"/todos-page\">\n              <ToDosPage parkToDos={parkToDos} />\n            </Route>\n          </Switch>\n        </Router> \n        </>\n        :\n        <Login login={login} signup={signup}/>\n      }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
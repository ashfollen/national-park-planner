{"version":3,"sources":["images/parks-collage.png","components/Home.js","components/Login.js","components/ParkCard.js","components/ParksPage.js","components/RangeDatePicker.js","components/CampgroundCard.js","components/CampgroundsPage.js","components/TableDatePicker.js","components/ToDoCard.js","components/ToDosPage.js","App.js","reportWebVitals.js","index.js"],"names":["Home","user","className","username","to","src","collage","Login","signup","login","useState","setUsername","password","setPassword","newUsername","setNewUsername","newPassword","setNewPassword","onSubmit","e","preventDefault","handleSubmitLogin","placeholder","type","value","onChange","target","handleSubmitSignup","ParkCard","park","viewCampgrounds","viewToDos","width","images","url","fullName","addresses","city","stateCode","id","parkCode","onClick","ParksPage","parks","map","RangeDatePicker","Date","startDate","setStartDate","endDate","setEndDate","selected","selectsStart","date","selectsEnd","minDate","CampgroundCard","campground","name","description","campsites","totalSites","CampgroundsPage","parkCampgrounds","TableDatePicker","setDate","ToDoCard","toDo","title","shortDescription","ToDosPage","parkToDos","console","log","App","process","loggedIn","setLoggedIn","setUser","setParks","campgrounds","setCampgrounds","setParkCampgrounds","toDos","setToDos","setParkToDos","useEffect","axios","get","then","response","data","filter","designation","undefined","relatedParks","token","localStorage","getItem","fetch","method","headers","Authorization","ok","json","clear","basename","exact","path","Accept","body","JSON","stringify","jwt","setItem","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.549cfcd2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/parks-collage.e8209b12.png\";","import collage from '../images/parks-collage.png';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\n\nfunction Home({user}) {\n    return (\n        <div className=\"App\">\n            <div className=\"welcome\">\n                <p>{user.username}, welcome to your National Park Planner!</p>\n            </div>\n            <Link to=\"/parks-page\">\n                <div className=\"begin-exploring\">\n                    <img src={collage}/>\n                    <div className=\"overlay-text\">\n                        <h1>Begin Exploring</h1>\n                    </div>\n                </div>\n            </Link>\n        </div>\n    )\n}\n\n\nexport default Home;","import { useState } from 'react';\n\nexport default function Login({signup, login}) {\n\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [newUsername, setNewUsername] = useState('')\n    const [newPassword, setNewPassword] = useState('')\n\n    function handleSubmitSignup(e) {\n        e.preventDefault()\n        signup(newUsername, newPassword)\n    }\n\n    function handleSubmitLogin(e) {\n        e.preventDefault();\n        login(username, password)\n    }\n\n    return (\n        <div className=\"login\">\n                <div className=\"title\">\n                    <h1>National Parks Planner</h1>\n                </div>\n                <form onSubmit={(e) => handleSubmitLogin(e)}>\n                <input\n                    placeholder=\"username\"\n                    type=\"text\"\n                    value={username}\n                    onChange={(e) => setUsername(e.target.value)}\n                />\n                <input\n                    placeholder=\"password\"\n                    type=\"text\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                />\n                <button type=\"submit\">Login</button>\n                </form>\n    \n                <form onSubmit={(e) => handleSubmitSignup(e)}>\n                <input\n                    placeholder=\"username\"\n                    type=\"text\"\n                    value={newUsername}\n                    onChange={(e) => setNewUsername(e.target.value)}\n                />\n                <input\n                    placeholder=\"password\"\n                    type=\"text\"\n                    value={newPassword}\n                    onChange={(e) => setNewPassword(e.target.value)}\n                />\n                \n                <button type=\"submit\">Create Account</button>\n                </form>\n            </div>\n    )\n}\n\n\n","import { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nfunction ParkCard({park, viewCampgrounds, viewToDos}) {\n    return (\n        <div className=\"park-card\">\n            <img width=\"200\" src={park.images[0].url}/>\n            <h2>{park.fullName}</h2>\n            <h3>{park.addresses[0].city}, {park.addresses[0].stateCode}</h3>\n            <Link to=\"/campgrounds-page\">\n                <button id={park.parkCode} onClick={(e) => viewCampgrounds(e.target.id)}>View Campgrounds</button>\n            </Link>\n            <Link to=\"/todos-page\">\n                <button id={park.parkCode} onClick={(e) => viewToDos(e.target.id)}>View ToDos</button>\n            </Link>\n        </div>\n    )\n}\n\nexport default ParkCard;","import ParkCard from \"./ParkCard\";\n\nfunction ParksPage({parks, viewCampgrounds, viewToDos}) {\n    return (\n        <div className=\"parks-page\">\n            {parks.map((park) => \n                <ParkCard key={park.id} park={park} viewCampgrounds={viewCampgrounds} viewToDos={viewToDos} />\n            )}    \n        </div>\n    )\n}\n\nexport default ParksPage;","import { useState } from \"react\";\nimport DatePicker from \"react-datepicker\";\n\nfunction RangeDatePicker() {\n    const [startDate, setStartDate] = useState(new Date());\n    const [endDate, setEndDate] = useState(new Date());\n\n    return(\n        \n        <div>\n            <p>Start Date:</p>\n            <DatePicker\n                selected={startDate}\n                selectsStart\n                startDate={startDate}\n                endDate={endDate} \n                onChange={date => setStartDate(date)}\n            />\n            <p>End Date:</p>\n            <DatePicker\n                selected={endDate}\n                selectsEnd\n                startDate={startDate}\n                endDate={endDate}\n                minDate={startDate}\n                onChange={date => setEndDate(date)}\n            />\n   </div>\n        \n    )\n}\n\nexport default RangeDatePicker;","import RangeDatePicker from './RangeDatePicker'\n\nfunction CampgroundCard({campground}) {\n    return(\n        <div className=\"cg-card\">   \n            <img width=\"200\" src={campground.images[0].url} />\n            <h2>{campground.name}</h2>\n            <p>{campground.description}</p>\n            <p>Total Sites: {campground.campsites.totalSites}</p>  \n            <h4>Add to Itinerary: </h4><RangeDatePicker />   \n        </div>\n    )\n}\n\nexport default CampgroundCard;","import CampgroundCard from \"./CampgroundCard\";\n\nfunction CampgroundsPage({parkCampgrounds}) {\n    return(\n        <div className=\"cgs-page\">\n            {parkCampgrounds.map((campground) => \n                <CampgroundCard key={campground.id}campground={campground}/>\n            )}\n        </div>\n    )\n}\n\nexport default CampgroundsPage;","import { useState } from \"react\";\nimport DatePicker from \"react-datepicker\";\n\nfunction TableDatePicker() {\n    const [date, setDate] = useState(new Date());\n\n    return(\n        \n            <DatePicker selected={date} onChange={date => setDate(date)} />\n        \n    )\n}\n\nexport default TableDatePicker;","import TableDatePicker from './TableDatePicker'\n\nfunction ToDoCard({toDo}) {\n    return(\n        <div className=\"todo-card\">\n            <img width=\"200\" src={toDo.images[0].url}/>\n            <h1>{toDo.title}</h1>\n            <p>{toDo.shortDescription}</p>\n            <h4>Add to Itinerary: </h4><TableDatePicker />  \n        </div>\n    )\n}\n\nexport default ToDoCard;","import ToDoCard from \"./ToDoCard\";\n\nfunction ToDosPage({parkToDos}) {\n    return(\n        <div className=\"todos-page\">\n            {console.log(\"TODOS PAGE\", parkToDos)}\n            {parkToDos.map((toDo) => <ToDoCard key={toDo.id} toDo={toDo} />)}\n        </div>\n    )\n}\n\nexport default ToDosPage;","import './App.css';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Home from \"./components/Home\";\nimport Login from \"./components/Login\";\nimport ParksPage from \"./components/ParksPage\";\nimport CampgroundsPage from \"./components/CampgroundsPage\";\nimport ToDosPage from \"./components/ToDosPage\";\n\nfunction App() {\n\n  const production = 'https://backend-national-park-planner.herokuapp.com/';\n  const development = 'http://localhost:3000';\n  const url = (process.env.NODE_ENV ? production : development)\n  // const url = 'http://localhost:3000/'\n  console.log(process.env.NODE_ENV)\n\n  const [loggedIn, setLoggedIn] = useState(false)\n  const [user, setUser] = useState({})\n  const [parks, setParks] = useState([])\n  const [campgrounds, setCampgrounds] = useState([])\n  const [parkCampgrounds, setParkCampgrounds] = useState([])\n  const [toDos, setToDos] = useState([])\n  const [parkToDos, setParkToDos] = useState([])\n\n\n  useEffect(() => {\n    const parkAPIRoot = \"https://developer.nps.gov/api/v1/parks?limit=465&\";\n    const accessKey = process.env.REACT_APP_ACCESSKEY;\n\n    axios \n    .get(`${parkAPIRoot}api_key=${accessKey}`)\n    .then(response => {\n      setParks(response.data.data.filter((park) => \n      park.designation === 'National Park'))\n    })\n  }, [])\n\n  useEffect(() => {\n    const campAPIRoot = \"https://developer.nps.gov/api/v1/campgrounds?limit=642&\";\n    const accessKey=process.env.REACT_APP_ACCESSKEY;\n\n    axios \n    .get(`${campAPIRoot}api_key=${accessKey}`)\n    .then(response => setCampgrounds(response.data.data))\n  }, [])\n\n  useEffect(() => {\n    const toDoAPIRoot = \"https://developer.nps.gov/api/v1/thingstodo?limit=2500&\";\n    const accessKey = process.env.REACT_APP_ACCESSKEY;\n\n    axios \n    .get(`${toDoAPIRoot}api_key=${accessKey}`)\n    .then(response => { \n      setToDos(response.data.data.filter((toDo) => toDo.relatedParks[0] !== undefined && toDo.relatedParks[0].designation === \"National Park\"))\n    })\n  }, [])\n\n  useEffect(() => {\n    const token = localStorage.getItem(\"jwt\");\n    console.log(\"token: \" + token)\n    \n    fetch(`${url}/profile`, {\n      method: \"GET\",\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    }).then((response) => {\n      if (response.ok) {\n        response.json().then((data) => {\n          setLoggedIn(true)\n          setUser(data.user)\n          console.log(\"PROFILE\", data.user)\n        });\n      } else {\n        console.log(\"please log in\")\n      }\n    });\n  }, []);\n\n  \n    function signup(username, password) {\n      fetch(`${url}/users`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\",\n        },\n        body: JSON.stringify({\n          user: {\n            username: `${username}`,\n            password: `${password}`,\n          },\n        }),\n      })\n        .then((response) => {\n          if (response.ok) {\n            response.json().then((data) => {\n              setUser(data.user)\n              setLoggedIn(true)\n              localStorage.setItem(\"jwt\", data.jwt);\n            });\n          } else {\n            console.log(\"form incorrectly filled out\")\n          }\n        })\n    }\n  \n    function login(username, password) {\n      fetch(`${url}/login`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\",\n        },\n        body: JSON.stringify({\n          user: {\n            username: `${username}`,\n            password: `${password}`\n          }\n        })\n      }).then((response) => {\n        if (response.ok) {\n          response.json().then((data) => {\n            console.log(data.jwt)\n            console.log(\"USER:\", data.user)\n            setUser(data.user)\n            setLoggedIn(true)\n            localStorage.setItem(\"jwt\", data.jwt);\n          });\n        } else {\n          console.log(\"wrong username/password\")\n        }\n      })\n    }\n  \n    function logout() {\n      localStorage.clear()\n      setUser(null)\n      setLoggedIn(false)\n    }\n\n    function viewCampgrounds(parkCode) {\n      console.log(\"VIEWCAMPGROUNDS FUNCTION\")\n      setParkCampgrounds(campgrounds.filter((campground) => campground.parkCode === parkCode))\n    }\n\n    function viewToDos(parkCode) {\n      console.log(\"VIEWTODOS FUNCTION\")\n      setParkToDos(toDos.filter((toDo) => toDo.relatedParks[0].parkCode === parkCode))\n    }\n  \n  return (\n    <div className=\"app\">\n      {loggedIn ? <>\n        <button className=\"logout-button\" onClick={logout}>Logout</button>\n        <Router basename={process.env.PUBLIC_URL}>\n          <div className=\"select-page\">\n              <nav>\n              <Link to=\"/\">Home</Link>\n              <Link to=\"/parks-page\">Parks</Link>\n              {/* <Link to=\"/campgrounds-page\">Campgrounds</Link> */}\n              </nav>\n          </div>\n          <Switch>\n            <Route exact path=\"/\">\n              <Home user={user}/>\n            </Route>\n            <Route path=\"/parks-page\">\n              <ParksPage parks={parks} viewCampgrounds={viewCampgrounds} viewToDos={viewToDos}/>\n            </Route>\n            <Route path=\"/campgrounds-page\">\n              <CampgroundsPage parkCampgrounds={parkCampgrounds} />\n            </Route>\n            <Route path=\"/todos-page\">\n              <ToDosPage parkToDos={parkToDos} />\n            </Route>\n          </Switch>\n        </Router> \n        </>\n        :\n        <Login login={login} signup={signup}/>\n      }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
{"version":3,"sources":["components/TestRoute.js","App.js","reportWebVitals.js","index.js"],"names":["TestRoute","className","App","fetch","method","headers","Accept","body","JSON","stringify","user","username","password","then","r","json","console","log","basename","process","to","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+PASeA,MATf,WACI,OACI,qBAAKC,UAAU,MAAf,SACI,oDCuCGC,MAtCf,WAsBE,OAhBAC,MAAM,GAAD,OAJc,sDAId,UAAiB,CACpBC,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChBC,OAAQ,oBAEVC,KAAMC,KAAKC,UAAU,CACnBC,KAAM,CACJC,SAAU,kBACVC,SAAU,uBAIbC,MAAK,SAACC,GAAD,OAAOA,EAAEC,UACdF,KAAKG,QAAQC,KAGd,eAAC,IAAD,CAAQC,SAAUC,yBAAlB,UACE,qBAAKlB,UAAU,UAAf,SACE,8BACE,cAAC,IAAD,CAAMmB,GAAG,IAAT,2BAGJ,cAAC,IAAD,UACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,YCvBKC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.bfcabd84.chunk.js","sourcesContent":["function TestRoute() {\n    return (\n        <div className=\"App\">\n            <h1>Hello TestRoute</h1>\n        </div>\n    )\n}\n\n\nexport default TestRoute;","import './App.css';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport TestRoute from \"./components/TestRoute\"\n\nfunction App() {\n\n  const production = 'https://backend-national-park-planner.herokuapp.com';\n  const development = 'http://localhost:3000';\n  const url = (process.env.NODE_ENV ? production : development)\n\n  fetch(`${url}/users`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\",\n    },\n    body: JSON.stringify({\n      user: {\n        username: \"testingusername\",\n        password: \"testingpassword\"\n      },\n    }),\n  })\n    .then((r) => r.json())\n    .then(console.log);\n\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <div className=\"nav-bar\">\n        <nav>\n          <Link to=\"/\">TestRoute</Link>\n        </nav>\n      </div>\n      <Switch>\n        <Route exact path=\"/\">\n          <TestRoute />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}